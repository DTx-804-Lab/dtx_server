plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'org.jetbrains.compose' version '1.2.0'
}

group 'com.dtx804lab'
version '0.6.0'

repositories {
    mavenCentral()
    maven { url "https://maven.pkg.jetbrains.space/public/p/compose/dev" }
    maven {
        url = uri("https://maven.pkg.github.com/dtx-804-lab/dtx_netty_lib")
        credentials {
            Properties properties = new Properties()
            def propertiesFile = project.rootProject.file('local.properties')
            if (propertiesFile.exists()) {
                properties.load(propertiesFile.newDataInputStream())
            }

            username = properties.getProperty('PUBLISHING_USERNAME') ?: System.getenv("USERNAME")
            password = properties.getProperty('PUBLISHING_TOKEN') ?: System.getenv("TOKEN")
        }
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    implementation 'com.dtx804lab:dtx_netty_lib:0.3.0'
    implementation 'io.netty:netty-all:4.1.75.Final'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.7.20'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1-native-mt'
    implementation compose.desktop.currentOs
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation 'org.xerial:sqlite-jdbc:3.40.0.0'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2'
}

compose.desktop {
    application {
        mainClass = "MainKt"
    }
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'com/dtx804lab/dtx_server/MainKt'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}